% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealDataset.R
\name{cdisc_dataset}
\alias{cdisc_dataset}
\title{Create a new object of \code{CDISCTealDataset} class}
\usage{
cdisc_dataset(
  dataname,
  x,
  keys = get_cdisc_keys(dataname),
  parent = if (identical(dataname, "ADSL")) character(0) else "ADSL",
  label = data_label(x),
  code = character(0),
  vars = list(),
  metadata = NULL
)
}
\arguments{
\item{dataname}{(\code{character}) a given name for the dataset, it cannot contain spaces}

\item{x}{(\code{data.frame} or \code{MultiAssayExperiment}) object from which the dataset will be created}

\item{keys}{optional, (\code{character}) vector with primary keys}

\item{parent}{(\code{character}, optional) parent dataset name}

\item{label}{(\code{character}) label to describe the dataset}

\item{code}{(\code{character}) a character string defining the code needed to
produce the data set in \code{x}}

\item{vars}{(named \code{list}) in case when this object code depends on other \code{TealDataset}
object(s) or other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{TealDataset} or \code{TealDatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}

\item{metadata}{(named \code{list} or \code{NULL}) field containing metadata about the dataset.
Each element of the list should be atomic and length one.}
}
\value{
(\code{CDISCTealDataset}) a dataset with connected metadata
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Function that creates \code{CDISCTealDataset} object
}
\examples{
ADSL <- example_cdisc_data("ADSL")

cdisc_dataset("ADSL", ADSL, metadata = list(type = "teal.data"))
}
