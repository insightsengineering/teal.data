% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_keys.R
\name{assert_join_keys}
\alias{assert_join_keys}
\alias{test_join_keys}
\alias{expect_join_keys}
\alias{check_join_keys_alike}
\title{Assert the JoinKeys class membership of an argument}
\usage{
assert_join_keys(x, .var.name = checkmate::vname(x), add = NULL)

test_join_keys(x)

expect_join_keys(x, info = NULL, label = vname(x))

check_join_keys_alike(x)
}
\arguments{
\item{x}{[any]\cr
Object to check.}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in assertions. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertion messages. See \code{\link[checkmate]{AssertCollection}}.}

\item{info}{[\code{character(1)}]\cr
Extra information to be included in the message for the testthat reporter.
See \code{\link[testthat]{expect_that}}.}

\item{label}{[\code{character(1)}]\cr
Name of the checked object to print in messages. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}
}
\value{
\code{x} invisibly
}
\description{
Assert the JoinKeys class membership of an argument
}
\examples{
check_join_keys_alike(list("ds1" = list("key")))
check_join_keys_alike(list("ds1" = list(ds2 = "key")))
}
\keyword{internal}
