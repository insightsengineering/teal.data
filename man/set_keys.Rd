% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_keys.R
\name{set_keys}
\alias{set_keys}
\alias{set_keys.TealDataset}
\alias{set_keys.TealDatasetConnector}
\alias{set_keys.TealDataAbstract}
\title{Set dataset primary keys}
\usage{
set_keys(x, ...)

\method{set_keys}{TealDataset}(x, keys, ...)

\method{set_keys}{TealDatasetConnector}(x, keys, ...)

\method{set_keys}{TealDataAbstract}(x, dataname, keys, ...)
}
\arguments{
\item{x}{an object of \code{TealDataset} or \code{TealDatasetConnector} class}

\item{...}{not used, only for support of S3}

\item{keys}{optional, (\code{character}) vector with primary keys}

\item{dataname}{(\code{character}) name of dataset for which set the keys}
}
\value{
(\code{character}) vector of column names
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Set dataset primary keys
}
\examples{
# TealDataset --------

set_keys(
  dataset(
    "DF",
    data.frame(ID = 1:10, x = runif(10))
  ),
  keys = c("ID")
)
# TealDatasetConnector --------

pull_fun <- callable_function(
  function() {
    data.frame(ID = 1:10, x = runif(10))
  }
)
set_keys(
  dataset_connector(
    "DF",
    pull_fun
  ),
  keys = c("ID")
)
# TealData --------

set_keys(
  teal_data(
    dataset("x", data.frame(x1 = 1:10, y1 = 11:20), keys = "x1"),
    dataset("y", data.frame(x2 = 1:10, y2 = 11:20), keys = "x2")
  ),
  "x",
  c("x1", "y1")
)
}
