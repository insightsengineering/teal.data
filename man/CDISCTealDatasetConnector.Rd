% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealDatasetConnector.R
\name{CDISCTealDatasetConnector}
\alias{CDISCTealDatasetConnector}
\title{A \code{CDISCTealDatasetConnector} class of objects}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Objects of this class store the connection function to fetch a single dataset.

The difference compared to \code{TealDatasetConnector} is a parent field that
indicates name of the parent dataset. Note that the parent field might
be empty (i.e. \code{character(0)}).
}
\section{Super class}{
\code{\link[teal.data:TealDatasetConnector]{teal.data::TealDatasetConnector}} -> \code{CDISCTealDatasetConnector}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CDISCTealDatasetConnector-new}{\code{CDISCTealDatasetConnector$new()}}
\item \href{#method-CDISCTealDatasetConnector-get_parent}{\code{CDISCTealDatasetConnector$get_parent()}}
\item \href{#method-CDISCTealDatasetConnector-pull}{\code{CDISCTealDatasetConnector$pull()}}
\item \href{#method-CDISCTealDatasetConnector-clone}{\code{CDISCTealDatasetConnector$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="check"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-check'><code>teal.data::TealDatasetConnector$check()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_code"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_code'><code>teal.data::TealDatasetConnector$get_code()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_code_class"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_code_class'><code>teal.data::TealDatasetConnector$get_code_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_dataname"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_dataname'><code>teal.data::TealDatasetConnector$get_dataname()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_datanames"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_datanames'><code>teal.data::TealDatasetConnector$get_datanames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_dataset"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_dataset'><code>teal.data::TealDatasetConnector$get_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_dataset_label"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_dataset_label'><code>teal.data::TealDatasetConnector$get_dataset_label()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_error_message"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_error_message'><code>teal.data::TealDatasetConnector$get_error_message()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_keys"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_keys'><code>teal.data::TealDatasetConnector$get_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_pull_args"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_pull_args'><code>teal.data::TealDatasetConnector$get_pull_args()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_pull_callable"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_pull_callable'><code>teal.data::TealDatasetConnector$get_pull_callable()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_raw_data"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_raw_data'><code>teal.data::TealDatasetConnector$get_raw_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_server"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_server'><code>teal.data::TealDatasetConnector$get_server()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_ui"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_ui'><code>teal.data::TealDatasetConnector$get_ui()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="get_var_r6"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-get_var_r6'><code>teal.data::TealDatasetConnector$get_var_r6()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="is_failed"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-is_failed'><code>teal.data::TealDatasetConnector$is_failed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="is_mutate_delayed"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-is_mutate_delayed'><code>teal.data::TealDatasetConnector$is_mutate_delayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="is_pulled"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-is_pulled'><code>teal.data::TealDatasetConnector$is_pulled()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="launch"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-launch'><code>teal.data::TealDatasetConnector$launch()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="mutate"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-mutate'><code>teal.data::TealDatasetConnector$mutate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="print"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-print'><code>teal.data::TealDatasetConnector$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="reassign_datasets_vars"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-reassign_datasets_vars'><code>teal.data::TealDatasetConnector$reassign_datasets_vars()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="set_args"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-set_args'><code>teal.data::TealDatasetConnector$set_args()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="set_dataset_label"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-set_dataset_label'><code>teal.data::TealDatasetConnector$set_dataset_label()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="set_keys"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-set_keys'><code>teal.data::TealDatasetConnector$set_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDatasetConnector" data-id="set_ui_input"><a href='../../teal.data/html/TealDatasetConnector.html#method-TealDatasetConnector-set_ui_input'><code>teal.data::TealDatasetConnector$set_ui_input()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealDatasetConnector-new"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealDatasetConnector-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{TealDatasetConnector} object. Set the pulling function
\code{CallableFunction} which returns a \code{data.frame}, e.g. by reading
from a function or creating it on the fly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$new(
  dataname,
  pull_callable,
  keys,
  parent,
  code = character(0),
  label = character(0),
  vars = list(),
  metadata = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{\code{pull_callable}}{(\code{CallableFunction})\cr
function with necessary arguments set to fetch data from connection.}

\item{\code{keys}}{(\code{character})\cr
vector of dataset primary keys column names}

\item{\code{parent}}{optional, (\code{character}) \cr
parent dataset name}

\item{\code{code}}{(\code{character})\cr
A character string defining code to modify \code{raw_data} from this dataset. To modify
current dataset code should contain at least one assignment to object defined in \code{dataname}
argument. For example if \code{dataname = ADSL} example code should contain
\verb{ADSL <- <some R code>}. Can't be used simultaneously with \code{script}}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset.}

\item{\code{vars}}{(named \code{list})) \cr
In case when this object code depends on other \code{TealDataset} object(s) or
other constant value, this/these object(s) should be included as named
element(s) of the list. For example if this object code needs \code{ADSL}
object we should specify \verb{vars = list(ADSL = <adsl object>)}.
It's recommended to include \code{TealDataset} or \code{TealDatasetConnector} objects to
the \code{vars} list to preserve reproducibility. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}

\item{\code{metadata}}{(named \code{list}, \code{NULL} or \code{CallableFunction}) \cr
Field containing either the metadata about the dataset (each element of the list
should be atomic and length one) or a \code{CallableFuntion} to pull the metadata
from a connection. This should return a \code{list} or an object which can be
converted to a list with \code{as.list}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealDatasetConnector-get_parent"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealDatasetConnector-get_parent}{}}}
\subsection{Method \code{get_parent()}}{
Get parent dataset name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$get_parent()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character}) indicating parent \code{dataname}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealDatasetConnector-pull"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealDatasetConnector-pull}{}}}
\subsection{Method \code{pull()}}{
Pull the data

Read or create the data using \code{pull_callable} specified in the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$pull(args = NULL, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list})\cr
additional dynamic arguments for pull function. \code{args} can be omitted if \code{pull_callable}
from constructor already contains all necessary arguments to pull data. One can try
to execute \code{pull_callable} directly by \code{x$pull_callable$run()} or to get code using
\code{x$pull_callable$get_code()}. \code{args} specified in pull are used temporary to get data but
not saved in code.}

\item{\code{try}}{(\code{logical} value)\cr
whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealDatasetConnector-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealDatasetConnector-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealDatasetConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
