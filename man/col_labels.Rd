% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formatters_var_labels.R
\name{col_labels}
\alias{col_labels}
\alias{col_labels<-}
\title{Function Manages Label Attributes of Variables in a \code{data.frame}}
\source{
This function was taken 1-1 from
\href{https://cran.r-project.org/package=formatters}{formatters} package, to reduce the complexity of
the dependency tree.
}
\usage{
col_labels(x, fill = FALSE)

col_labels(x) <- value
}
\arguments{
\item{x}{\code{data.frame}}

\item{fill}{(\code{logical(1)}) specifying what to return if \code{label} attribute does not exist}

\item{value}{(\code{character}) new variable labels; setting \code{NA} removes the variable label}
}
\value{
For \code{col_labels}, named character vector of variable labels, the names being the corresponding variable names.
If the \code{label} attribute is missing, the vector elements will be the variable names themselves
if \code{fill = TRUE} and \code{NA} if \code{fill = FALSE}.

For \verb{col_labels<-}, modifies the variable labels of \code{data.frame}.(Note that the value of
col_labels(x) <- value is that of the assignment, value, not the return value from the left-hand side.)
}
\description{
Variable labels can be stored as a \code{label} attribute for each variable.
This functions either get named character vector with the variable labels
(empty sting if not specified) or sets all non-missing (non-NA) variable labels in a \code{data.frame}.
}
\examples{
x <- iris
col_labels(x)
col_labels(x) <- paste("label for", names(iris))
col_labels(x)
x <- iris
col_labels(x)
col_labels(x) <- paste("label for", names(iris))
col_labels(x)

if (interactive()) {
  View(x) # in RStudio data viewer labels are displayed
}
}
\seealso{
\code{\link[=col_relabel]{col_relabel()}}
}
