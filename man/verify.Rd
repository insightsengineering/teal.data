% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verify.R
\name{verify}
\alias{verify}
\alias{verify,teal_data-method}
\alias{verify,qenv.error-method}
\alias{is_verified,teal_data-method}
\alias{is_verified,qenv.error-method}
\alias{is_verified}
\title{Verify code reproducibility}
\usage{
verify(x)

is_verified(x)
}
\arguments{
\item{x}{\code{teal_data} object}
}
\value{
Input \code{teal_data} object or error.
}
\description{
Listed functions verify if code in \code{\link{teal_data}} object reproduces the stored objects.
Verification status can be checked by \code{\link[=is_verified]{is_verified()}}, returning respectively \code{TRUE} or \code{FALSE}.
}
\details{
\code{\link[=verify]{verify()}} checks if objects created by code in the \verb{@code} slot of \code{x} are \code{all_equal} to the
contents of the \verb{@env} slot,
\code{\link[=verify]{verify()}} updates the \verb{@verified} slot to \code{TRUE} in the returned \code{teal_data} object.
Once verified, the slot will always be set to \code{TRUE}.
If the \verb{@code} fails to recreate objects in \code{teal_data@env}, an error is raised.

See vignette \code{vignette("teal-data-reproducibility", package = "teal.data")} for more details.
}
\examples{
tdata1 <- teal_data()
tdata1 <- within(tdata1, {
  a <- 1
  b <- a^5
  c <- list(x = 2)
})
verify(tdata1)

tdata2 <- teal_data(x1 = iris, code = "x1 <- iris")
is_verified(tdata1)
is_verified(verify(tdata2))

tdata3 <- teal_data()
tdata3 <- within(tdata3, {
  stop("error")
})
try(verify(tdata3)) # fails


a <- 1
b <- 2
tdata4 <- teal_data(
  a = a, b = b,
  code = "a <- 1
          b <- 3"
)
tdata4
\dontrun{
verify(tdata4) # fails
}

}
