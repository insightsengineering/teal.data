% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDISCTealData.R
\name{CDISCTealData}
\alias{CDISCTealData}
\title{Manage multiple \code{CDISCTealDataConnector}, \code{CDISCTealDatasetConnector} and \code{CDISCTealDataset} objects.}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Class manages \code{CDISCTealDataConnector}, \code{CDISCTealDatasetConnector} and
\code{CDISCTealDataset} objects and aggregate them in one collection.
}
\section{Super classes}{
\code{\link[teal.data:TealDataAbstract]{teal.data::TealDataAbstract}} -> \code{\link[teal.data:TealData]{teal.data::TealData}} -> \code{CDISCTealData}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CDISCTealData-new}{\code{CDISCTealData$new()}}
\item \href{#method-CDISCTealData-get_parent}{\code{CDISCTealData$get_parent()}}
\item \href{#method-CDISCTealData-check_metadata}{\code{CDISCTealData$check_metadata()}}
\item \href{#method-CDISCTealData-clone}{\code{CDISCTealData$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="check"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-check'><code>teal.data::TealDataAbstract$check()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="check_reproducibility"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-check_reproducibility'><code>teal.data::TealDataAbstract$check_reproducibility()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="execute_mutate"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-execute_mutate'><code>teal.data::TealDataAbstract$execute_mutate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_check"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_check'><code>teal.data::TealDataAbstract$get_check()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_check_result"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_check_result'><code>teal.data::TealDataAbstract$get_check_result()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_code"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_code'><code>teal.data::TealDataAbstract$get_code()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_code_class"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_code_class'><code>teal.data::TealDataAbstract$get_code_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_dataset"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_dataset'><code>teal.data::TealDataAbstract$get_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="get_datasets"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-get_datasets'><code>teal.data::TealDataAbstract$get_datasets()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="is_pulled"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-is_pulled'><code>teal.data::TealDataAbstract$is_pulled()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="mutate"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-mutate'><code>teal.data::TealDataAbstract$mutate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="mutate_dataset"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-mutate_dataset'><code>teal.data::TealDataAbstract$mutate_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="reassign_datasets_vars"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-reassign_datasets_vars'><code>teal.data::TealDataAbstract$reassign_datasets_vars()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="set_check"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-set_check'><code>teal.data::TealDataAbstract$set_check()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealDataAbstract" data-id="set_pull_code"><a href='../../teal.data/html/TealDataAbstract.html#method-TealDataAbstract-set_pull_code'><code>teal.data::TealDataAbstract$set_pull_code()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="copy"><a href='../../teal.data/html/TealData.html#method-TealData-copy'><code>teal.data::TealData$copy()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_connectors"><a href='../../teal.data/html/TealData.html#method-TealData-get_connectors'><code>teal.data::TealData$get_connectors()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_datanames"><a href='../../teal.data/html/TealData.html#method-TealData-get_datanames'><code>teal.data::TealData$get_datanames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_items"><a href='../../teal.data/html/TealData.html#method-TealData-get_items'><code>teal.data::TealData$get_items()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_join_keys"><a href='../../teal.data/html/TealData.html#method-TealData-get_join_keys'><code>teal.data::TealData$get_join_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_server"><a href='../../teal.data/html/TealData.html#method-TealData-get_server'><code>teal.data::TealData$get_server()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="get_ui"><a href='../../teal.data/html/TealData.html#method-TealData-get_ui'><code>teal.data::TealData$get_ui()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="launch"><a href='../../teal.data/html/TealData.html#method-TealData-launch'><code>teal.data::TealData$launch()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="mutate_join_keys"><a href='../../teal.data/html/TealData.html#method-TealData-mutate_join_keys'><code>teal.data::TealData$mutate_join_keys()</code></a></span></li>
<li><span class="pkg-link" data-pkg="teal.data" data-topic="TealData" data-id="print"><a href='../../teal.data/html/TealData.html#method-TealData-print'><code>teal.data::TealData$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealData-new"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealData-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of \code{CDISCTealData} class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$new(..., check = FALSE, join_keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(\code{TealDataConnector}, \code{TealDataset} or
\code{TealDatasetConnector}) elements to include where \code{ADSL} data is mandatory.}

\item{\code{check}}{(\code{logical}) reproducibility check - whether evaluated preprocessing code gives the same objects
as provided in arguments. Check is run only if flag is true and preprocessing code is not empty.}

\item{\code{join_keys}}{(\code{JoinKeys}) or a single (\code{JoinKeySet})\cr
(optional) object with datasets column names used for joining.
If empty then it would be automatically derived basing on intersection of datasets primary keys}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealData-get_parent"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealData-get_parent}{}}}
\subsection{Method \code{get_parent()}}{
Get all datasets parent names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$get_parent()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(named \code{list}) with dataset name and its corresponding parent dataset name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealData-check_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealData-check_metadata}{}}}
\subsection{Method \code{check_metadata()}}{
Check correctness of stored joining keys and presence of keys to parent
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$check_metadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raise and error or invisible \code{TRUE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CDISCTealData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CDISCTealData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CDISCTealData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
