% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CallablePythonCode.R
\name{python_code}
\alias{python_code}
\title{Python Code}
\usage{
python_code(code = character(0), script = character(0))
}
\arguments{
\item{code}{(\code{character})\cr
Code to mutate the dataset. Must contain the \code{dataset$dataname}.}

\item{script}{(\code{character})\cr
file that contains python Code that can be read using \code{reticulate::py_run_script}.}
}
\value{
(\code{PythonCodeClass}) object containing python code
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
Create a python code object directly from python code or a
script containing python code.
}
\details{
Used to mutate dataset connector objects with python code. See
\code{\link{mutate_dataset}} or \code{\link{mutate_data}} for details.
}
\examples{
\dontrun{
library(reticulate)
library(magrittr)

# mutate dataset object

random_data_connector <- function(dataname) {
  fun_dataset_connector(
    dataname = dataname,
    fun = teal.data::example_cdisc_data,
    fun_args = list(dataname = dataname),
  )
}
x <- random_data_connector(dataname = "ADSL")

x \%>\% mutate_dataset(python_code("import pandas as pd
r.ADSL = pd.DataFrame({'x': [1]})"))

x$get_code()
x$pull()
x$get_raw_data()

# mutate data object

y <- 8
tc <- cdisc_data(
  random_data_connector(dataname = "ADSL"),
  random_data_connector(dataname = "ADLB")
)

tc \%>\% mutate_data(python_code("import pandas as pd
r.ADSL = pd.DataFrame({'STUDYID': [r.y], 'USUBJID': [r.y]})"), vars = list(y = y))


load_datasets(tc) # submit all
ds <- tc$get_dataset("ADSL")
ds$get_raw_data()
}
}
