<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="cdisc_data" timestamp="2024-10-16T17:11:58Z" hostname="e9d25d6f11aa" tests="2" skipped="0" failures="0" errors="0" time="0.057">
    <testcase time="0.024" classname="cdisc_data" name="cdisc_data_returns_teal_data_object_with_default_join_keys_for_given_dataset"/>
    <testcase time="0.033" classname="cdisc_data" name="cdisc_data_returns_teal_data_object_with_default_join_keys_for_given_dataset"/>
  </testsuite>
  <testsuite name="cdisc_join_keys" timestamp="2024-10-16T17:11:58Z" hostname="e9d25d6f11aa" tests="6" skipped="0" failures="0" errors="0" time="0.048">
    <testcase time="0.029" classname="cdisc_join_keys" name="default_cdisc_join_keys_is_assigned_in_package_environment"/>
    <testcase time="0.001" classname="cdisc_join_keys" name="default_cdisc_join_keys_is_assigned_in_package_environment"/>
    <testcase time="0.00700000000000001" classname="cdisc_join_keys" name="default_cdisc_join_keys_subsetting_of_datasets_with_parent_is_valid"/>
    <testcase time="0.001" classname="cdisc_join_keys" name="default_cdisc_join_keys_subsetting_of_datasets_with_parent_is_valid"/>
    <testcase time="0.00900000000000001" classname="cdisc_join_keys" name="default_cdisc_join_keys_subsetting_of_dataset_without_parent_contains_parent"/>
    <testcase time="0.001" classname="cdisc_join_keys" name="default_cdisc_join_keys_subsetting_of_dataset_without_parent_contains_parent"/>
  </testsuite>
  <testsuite name="datanames" timestamp="2024-10-16T17:11:58Z" hostname="e9d25d6f11aa" tests="17" skipped="0" failures="0" errors="0" time="0.178">
    <testcase time="0.025" classname="datanames" name="datanames_returns_contents_of_datanames_slot"/>
    <testcase time="0.004" classname="datanames" name="variables_not_in_datanames_are_omitted"/>
    <testcase time="0.004" classname="datanames" name="datanames_can_set_value_of_datanames"/>
    <testcase time="0.001" classname="datanames" name="datanames_can_set_value_of_datanames"/>
    <testcase time="0.00499999999999989" classname="datanames" name="only_names_of_existing_variables_are_accepted"/>
    <testcase time="0.0780000000000001" classname="datanames" name="only_names_of_existing_variables_are_accepted"/>
    <testcase time="0.005" classname="datanames" name="datanames_supports_qenv.error_class"/>
    <testcase time="0.001" classname="datanames" name="datanames_supports_qenv.error_class"/>
    <testcase time="0.005" classname="datanames" name="datanames_called_on_qenv.error_returns_NULL"/>
    <testcase time="0.003" classname="datanames" name="datanames_called_on_qenv.error_does_not_change_qenv.error"/>
    <testcase time="0.005" classname="datanames" name="datanames_are_set_in_topological_order_in_constructor_if_join_keys_are_specified"/>
    <testcase time="0.005" classname="datanames" name="datanames_return_parent_if_in_constructor_it_was_provided_in_join_keys_and_exists_in_env"/>
    <testcase time="0.005" classname="datanames" name="datanames_do_not_return_parent_if_in_constructor_it_was_provided_in_join_keys_but_do_not_exists_in_env"/>
    <testcase time="0.01" classname="datanames" name="datanames_return_topological_order_of_datasets_once_join_keys_are_specified"/>
    <testcase time="0.00600000000000001" classname="datanames" name="datanames_return_topological_order_of_datasets_after_datanames_are_called_after_join_keys"/>
    <testcase time="0.0099999999999999" classname="datanames" name="datanames_return_parent_if_join_keys_were_provided_and_parent_exists_in_env"/>
    <testcase time="0.00600000000000001" classname="datanames" name="datanames_do_not_return_parent_if_join_keys_were_provided_and_parent_did_not_exists_in_env"/>
  </testsuite>
  <testsuite name="formatters_var_labels" timestamp="2024-10-16T17:11:58Z" hostname="e9d25d6f11aa" tests="23" skipped="0" failures="0" errors="0" time="0.111">
    <testcase time="0.00600000000000001" classname="formatters_var_labels" name="col_labels_accepts_an_empty_data.frame"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_returns_empty_character_vector_for_a_data.frame_with_no_columns"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_returns_a_named_vector_of_NA_when_fill_FALSE_and_there_are_no_labels"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_returns_a_vector_of_column_names_when_fill_TRUE_and_there_are_no_labels"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_works_with_labels_having_additional_attributes_including_names_"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_returns_only_names_attribute_and_ignores_all_the_rest"/>
    <testcase time="0.00900000000000001" classname="formatters_var_labels" name="col_labels_throws_if_label_is_not_a_character"/>
    <testcase time="0.00800000000000001" classname="formatters_var_labels" name="col_labels_throws_if_label_is_not_a_character_of_length_1"/>
    <testcase time="0.00800000000000001" classname="formatters_var_labels" name="col_labels_value_accepts_character_vector"/>
    <testcase time="0.001" classname="formatters_var_labels" name="col_labels_value_accepts_character_vector"/>
    <testcase time="0.00800000000000001" classname="formatters_var_labels" name="col_labels_value_must_be_same_length_as_x"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_value_accepts_named_vector"/>
    <testcase time="0.011" classname="formatters_var_labels" name="col_labels_value_names_must_be_same_as_variable_names"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_sets_variable_labels_when_passed_unnamed_character_vector"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_sets_variable_labels_when_passed_partially_named_character_vector"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_sets_variable_labels_when_passed_partially_named_unordered_character_vector"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_sets_variable_labels_when_passed_named_character_vector"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_labels_matches_labels_to_variables_by_names_of_values_argument"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_labels_removes_labels_on_NA_character_"/>
    <testcase time="0.004" classname="formatters_var_labels" name="col_relabel_correctly_changes_column_labels_in_a_data_frame"/>
    <testcase time="0.00600000000000001" classname="formatters_var_labels" name="col_relabel_throws_an_error_for_non_existent_columns"/>
    <testcase time="0.005" classname="formatters_var_labels" name="col_relabel_returns_the_original_data.frame_when_no_new_labels_are_specified"/>
    <testcase time="0.003" classname="formatters_var_labels" name="col_relabel_removes_labels_on_NA_character_"/>
  </testsuite>
  <testsuite name="get_code" timestamp="2024-10-16T17:11:58Z" hostname="e9d25d6f11aa" tests="61" skipped="2" failures="0" errors="4" time="0.855">
    <testcase time="0.0329999999999999" classname="get_code" name="handles_empty_code_slot"/>
    <testcase time="0.002" classname="get_code" name="handles_empty_code_slot"/>
    <testcase time="0.011" classname="get_code" name="handles_the_code_without_symbols_on_rhs"/>
    <testcase time="0.012" classname="get_code" name="handles_the_code_included_in_curly_brackets"/>
    <testcase time="0.00800000000000001" classname="get_code" name="handles_the_code_of_length_1_when_at_least_one_is_enclosed_in_curly_brackets"/>
    <testcase time="0.00800000000000001" classname="get_code" name="extracts_the_code_of_a_binding_from_character_vector_containing_simple_code"/>
    <testcase time="0.00600000000000001" classname="get_code" name="extracts_the_code_of_a_binding_from_character_vector_containing_simple_code"/>
    <testcase time="0.00800000000000001" classname="get_code" name="extracts_the_code_without_downstream_usage"/>
    <testcase time="0.00800000000000001" classname="get_code" name="works_for_datanames_of_length_1"/>
    <testcase time="0.00700000000000001" classname="get_code" name="warns_if_binding_doesn_t_exist_in_code"/>
    <testcase time="0.011" classname="get_code" name="does_not_fall_into_a_loop"/>
    <testcase time="0.01" classname="get_code" name="does_not_fall_into_a_loop"/>
    <testcase time="0.0079999999999999" classname="get_code" name="does_not_fall_into_a_loop"/>
    <testcase time="0.00900000000000001" classname="get_code" name="extracts_code_of_a_parent_binding_but_only_those_evaluated_before_coocurence"/>
    <testcase time="0.011" classname="get_code" name="extracts_the_code_of_a_parent_binding_if_used_as_an_arg_in_a_function_call"/>
    <testcase time="0.01" classname="get_code" name="extracts_the_code_when_using_"/>
    <testcase time="0.011" classname="get_code" name="detects_every_assign_calls_even_if_not_evaluated_if_there_is_only_one_assignment_in_this_line"/>
    <testcase time="0.00600000000000001" classname="get_code" name="returns_result_of_length_1_for_non_empty_input"/>
    <testcase time="0.002" classname="get_code" name="returns_result_of_length_1_for_non_empty_input"/>
    <testcase time="0.00800000000000001" classname="get_code" name="does_not_break_if_code_is_separated_by_"/>
    <testcase time="0.0109999999999999" classname="get_code" name="does_not_break_if_code_uses_quote_"/>
    <testcase time="0.02" classname="get_code" name="does_not_break_if_object_is_used_in_a_function_on_lhs"/>
    <testcase time="0.012" classname="get_code" name="does_not_break_if_object_is_used_in_a_function_on_lhs_and_influencers_are_both_on_lhs_and_rhs"/>
    <testcase time="0.022" classname="get_code" name="extracts_the_code_for_assign_where_x_is_a_literal_string"/>
    <testcase time="0.016" classname="get_code" name="extracts_the_code_for_assign_where_x_is_a_literal_string"/>
    <testcase time="0.0150000000000001" classname="get_code" name="extracts_the_code_for_assign_where_x_is_a_literal_string"/>
    <testcase time="0.00299999999999989" classname="get_code" name="extracts_the_code_for_assign_where_x_is_variable">
      <skipped message="Reason: We will not resolve this, as this requires code evaluation. ('test-get_code.R:268:3')"/>
    </testcase>
    <testcase time="0.04" classname="get_code" name="works_for_assign_detection_no_matter_how_many_parametrers_were_provided_in_assignq_"/>
    <testcase time="0.0089999999999999" classname="get_code" name="detects_function_usage_of_the_assignment_operator"/>
    <testcase time="0.00500000000000012" classname="get_code" name="detects_function_usage_of_the_assignment_operator"/>
    <testcase time="0.012" classname="get_code" name="get_code_does_not_break_if_linksto_is_put_in_the_last_line"/>
    <testcase time="0.0109999999999999" classname="get_code" name="_linksto_makes_a_line_being_returned_for_an_affected_binding"/>
    <testcase time="0.00900000000000012" classname="get_code" name="_linksto_returns_the_line_for_an_affected_binding_even_if_the_object_did_not_exist_in_the_same_iteration_of_eval_code"/>
    <testcase time="0.012" classname="get_code" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_output_when_using_linksto"/>
    <testcase time="0.0089999999999999" classname="get_code" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_output_when_using_linksto"/>
    <testcase time="0.016" classname="get_code" name="_linksto_gets_extracted_if_it_s_a_side_effect_on_a_dependent_object_even_of_a_dependent_object_"/>
    <testcase time="0.014" classname="get_code" name="ignores_occurrence_in_a_function_definition"/>
    <testcase time="0.01" classname="get_code" name="ignores_occurrence_in_a_function_definition"/>
    <testcase time="0.0130000000000001" classname="get_code" name="ignores_occurrence_in_a_function_definition_that_has_function_in_it"/>
    <testcase time="0.0109999999999999" classname="get_code" name="ignores_occurrence_in_a_function_definition_that_has_function_in_it"/>
    <testcase time="0.022" classname="get_code" name="ignores_occurrence_in_a_function_definition_if_there_is_multiple_function_definitions"/>
    <testcase time="0.016" classname="get_code" name="ignores_occurrence_in_a_function_definition_if_there_is_multiple_function_definitions"/>
    <testcase time="0.0210000000000001" classname="get_code" name="ignores_occurrence_in_a_function_definition_in_lapply"/>
    <testcase time="0.004" classname="get_code" name="does_not_ignore_occurrence_in_function_body_if_object_exsits_in_env">
      <skipped message="Reason: This is not urgent and can be ommitted with @linksto tag. ('test-get_code.R:476:3')"/>
    </testcase>
    <testcase time="0.036" classname="get_code" name="ignores_occurrence_in_function_definition_without_curly_brackets"/>
    <testcase time="0.0089999999999999" classname="get_code" name="ignores_occurrence_in_function_definition_without_curly_brackets"/>
    <testcase time="0.018" classname="get_code" name="detects_occurrence_of_the_function_object"/>
    <testcase time="0.0129999999999999" classname="get_code" name="detects_occurrence_of_a_function_definition_when_a_formal_is_named_the_same_as_a_function"/>
    <testcase time="0.014" classname="get_code" name="detects_occurrence_of_a_function_definition_with_a_linksto_usage"/>
    <testcase time="0.0169999999999999" classname="get_code" name="understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_"/>
    <testcase time="0.018" classname="get_code" name="understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_"/>
    <testcase time="0.0110000000000001" classname="get_code" name="detects_cooccurrence_properly_even_if_all_objects_are_on_lhs"/>
    <testcase time="0.0269999999999999" classname="get_code" name="understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_"/>
    <testcase time="0.0429999999999999" classname="get_code" name="understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_"/>
    <testcase time="0.014" classname="get_code" name="library_and_require_are_always_returned"/>
    <testcase time="0.0150000000000001" classname="get_code" name="data_call_is_returned_when_data_name_is_provided_as_is"/>
    <testcase time="0.0169999999999999" classname="get_code" name="data_call_is_returned_when_data_name_is_provided_as_a_character"/>
    <testcase time="0.00900000000000012" classname="get_code" name="starting_with_underscore_is_detected_in_code_dependency">
      <error type="error" message="&lt;validation/try-error/simpleError/error/condition&gt; ('test-get_code.R:707:5')">&lt;validation/try-error/simpleError/error/condition&gt;
Error: there is no package called 'dplyr' 
 when evaluating qenv code:
iris_ds &lt;- `_add_column_`(iris, dplyr::tibble(new_col = "new column"))

trace: 
 `_add_column_` &lt;- function(lhs, rhs) dplyr::bind_cols(lhs, rhs)
iris_ds &lt;- `_add_column_`(iris, dplyr::tibble(new_col = "new column"))

Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-get_code.R:707:5
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(td, datanames = "iris_ds")
 5. └─teal.code::get_code(td, datanames = "iris_ds")</error>
    </testcase>
    <testcase time="0.0249999999999999" classname="get_code" name="with_space_character_is_detected_in_code_dependency">
      <error type="error" message="&lt;validation/try-error/simpleError/error/condition&gt; ('test-get_code.R:724:5')">&lt;validation/try-error/simpleError/error/condition&gt;
Error: there is no package called 'dplyr' 
 when evaluating qenv code:
iris_ds &lt;- `add column`(iris, dplyr::tibble(new_col = "new column"))

trace: 
 `add column` &lt;- function(lhs, rhs) dplyr::bind_cols(lhs, rhs)
iris_ds &lt;- `add column`(iris, dplyr::tibble(new_col = "new column"))

Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-get_code.R:724:5
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(td, datanames = "iris_ds")
 5. └─teal.code::get_code(td, datanames = "iris_ds")</error>
    </testcase>
    <testcase time="0.026" classname="get_code" name="without_special_characters_is_cleaned_and_detecteed_in_code_dependency">
      <error type="error" message="&lt;validation/try-error/simpleError/error/condition&gt; ('test-get_code.R:741:5')">&lt;validation/try-error/simpleError/error/condition&gt;
Error: there is no package called 'dplyr' 
 when evaluating qenv code:
iris_ds &lt;- add_column(iris, dplyr::tibble(new_col = "new column"))

trace: 
 add_column &lt;- function(lhs, rhs) dplyr::bind_cols(lhs, rhs)
iris_ds &lt;- add_column(iris, dplyr::tibble(new_col = "new column"))

Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-get_code.R:741:5
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(td, datanames = "iris_ds")
 5. └─teal.code::get_code(td, datanames = "iris_ds")</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="get_code" name="with_non_native_pipe_is_detected_code_dependency">
      <error type="error" message="&lt;validation/try-error/simpleError/error/condition&gt; ('test-get_code.R:760:5')">&lt;validation/try-error/simpleError/error/condition&gt;
Error: there is no package called 'dplyr' 
 when evaluating qenv code:
iris_ds &lt;- iris %add_column% dplyr::tibble(new_col = "new column")

trace: 
 `%add_column%` &lt;- function(lhs, rhs) dplyr::bind_cols(lhs, rhs)
iris_ds &lt;- iris %add_column% dplyr::tibble(new_col = "new column")

Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-get_code.R:760:5
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(td, datanames = "iris_ds")
 5. └─teal.code::get_code(td, datanames = "iris_ds")</error>
    </testcase>
  </testsuite>
  <testsuite name="join_key" timestamp="2024-10-16T17:11:59Z" hostname="e9d25d6f11aa" tests="27" skipped="0" failures="0" errors="0" time="0.123">
    <testcase time="0.0250000000000001" classname="join_key" name="join_key_throws_error_with_NULL_keys"/>
    <testcase time="0.0069999999999999" classname="join_key" name="join_key_throws_error_with_NA_keys"/>
    <testcase time="0.004" classname="join_key" name="join_key_throws_error_with_NA_keys"/>
    <testcase time="0.00700000000000012" classname="join_key" name="join_key_throws_error_with_numeric_keys"/>
    <testcase time="0.0069999999999999" classname="join_key" name="join_key_throws_error_with_data_keys"/>
    <testcase time="0.00600000000000001" classname="join_key" name="join_key_throws_error_with_invalid_duplicate_names_in_keys_values"/>
    <testcase time="0.004" classname="join_key" name="join_key_throws_error_with_invalid_duplicate_names_in_keys_values"/>
    <testcase time="0.00700000000000012" classname="join_key" name="join_key_throws_error_with_invalid_primary_keys_names_keys_"/>
    <testcase time="0.004" classname="join_key" name="join_key_throws_error_with_invalid_primary_keys_names_keys_"/>
    <testcase time="0.01" classname="join_key" name="join_key_throws_error_with_invalid_dataset_arguments"/>
    <testcase time="0.004" classname="join_key" name="join_key_throws_error_with_invalid_dataset_arguments"/>
    <testcase time="0.00499999999999989" classname="join_key" name="join_key_throws_error_with_invalid_dataset_arguments"/>
    <testcase time="0.004" classname="join_key" name="join_key_does_not_throw_error_with_valid_arguments"/>
    <testcase time="0.002" classname="join_key" name="join_key_does_not_throw_error_with_valid_arguments"/>
    <testcase time="0.00100000000000011" classname="join_key" name="join_key_does_not_throw_error_with_valid_arguments"/>
    <testcase time="0.002" classname="join_key" name="join_key_does_not_throw_error_with_valid_arguments"/>
    <testcase time="0.002" classname="join_key" name="join_key_does_not_throw_error_with_valid_arguments"/>
    <testcase time="0.00299999999999989" classname="join_key" name="join_key_will_fill_empty_names_with_value"/>
    <testcase time="0.00099999999999989" classname="join_key" name="join_key_will_fill_empty_names_with_value"/>
    <testcase time="0.004" classname="join_key" name="join_key_will_fill_empty_values_with_name"/>
    <testcase time="0.00100000000000011" classname="join_key" name="join_key_will_fill_empty_values_with_name"/>
    <testcase time="0.004" classname="join_key" name="join_key_ignores_empty_name_value_on_keys_if_it_has_other_keys"/>
    <testcase time="0.00099999999999989" classname="join_key" name="join_key_ignores_empty_name_value_on_keys_if_it_has_other_keys"/>
    <testcase time="0.002" classname="join_key" name="join_key_ignores_empty_name_value_on_keys_if_it_has_other_keys"/>
    <testcase time="0.00100000000000011" classname="join_key" name="join_key_ignores_empty_name_value_on_keys_if_it_has_other_keys"/>
    <testcase time="0.00299999999999989" classname="join_key" name="join_key_sets_key_as_character_0_when_keys_are_all_all_empty_strings"/>
    <testcase time="0.002" classname="join_key" name="join_key_sets_key_as_character_0_when_keys_are_all_all_empty_strings"/>
  </testsuite>
  <testsuite name="join_keys-c" timestamp="2024-10-16T17:11:59Z" hostname="e9d25d6f11aa" tests="12" skipped="0" failures="0" errors="0" time="0.113">
    <testcase time="0.00800000000000001" classname="join_keys_c" name="c.join_keys_joins_join_keys_object_with_join_key_objects"/>
    <testcase time="0.00600000000000001" classname="join_keys_c" name="c.join_key_set_joins_join_key_set_object_with_join_keys_objects"/>
    <testcase time="0.00900000000000012" classname="join_keys_c" name="c.join_keys_duplicated_keys_are_ignored"/>
    <testcase time="0.0069999999999999" classname="join_keys_c" name="c.join_keys_joins_join_keys_object_with_join_keys_objects"/>
    <testcase time="0.00600000000000001" classname="join_keys_c" name="c.join_keys_joins_join_keys_object_with_join_keys_and_join_key_objects"/>
    <testcase time="0.00700000000000012" classname="join_keys_c" name="c.join_keys_throws_when_joining_with_a_list"/>
    <testcase time="0.004" classname="join_keys_c" name="c.join_keys_doesn_t_throw_when_second_object_is_empty_join_keys"/>
    <testcase time="0.0109999999999999" classname="join_keys_c" name="c.join_key_set_merges_with_empty_and_non_empty_parents"/>
    <testcase time="0.01" classname="join_keys_c" name="c.join_key_set_merges_parents_also"/>
    <testcase time="0.0170000000000001" classname="join_keys_c" name="c.join_keys_merges_parents_also"/>
    <testcase time="0.018" classname="join_keys_c" name="c.join_keys_merges_existing_parents_are_overwritten"/>
    <testcase time="0.00999999999999979" classname="join_keys_c" name="c.join_keys_throws_error_when_merge_produces_acyclical_graph"/>
  </testsuite>
  <testsuite name="join_keys-extract" timestamp="2024-10-16T17:11:59Z" hostname="e9d25d6f11aa" tests="57" skipped="0" failures="0" errors="0" time="0.398">
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_returns_join_keys_object_when_i_and_j_is_missing"/>
    <testcase time="0.004" classname="join_keys_extract" name="join_keys_i_returns_empty_join_keys_when_i_or_j_are_NULL"/>
    <testcase time="0.00100000000000011" classname="join_keys_extract" name="join_keys_i_returns_empty_join_keys_when_i_or_j_are_NULL"/>
    <testcase time="0.0109999999999999" classname="join_keys_extract" name="join_keys_i_subsets_join_keys_object_to_specific_datasets"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="join_keys_i_returns_join_keys_object_with_keys_for_given_index"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_drops_keys_for_given_index"/>
    <testcase time="0.0109999999999999" classname="join_keys_extract" name="join_keys_i_returns_join_keys_object_for_given_dataset_including_its_parent"/>
    <testcase time="0.0110000000000001" classname="join_keys_extract" name="join_keys_i_returns_join_keys_object_for_given_dataset_and_doesn_t_include_its_children"/>
    <testcase time="0.004" classname="join_keys_extract" name="join_keys_i_returns_empty_join_keys_for_inexisting_dataset"/>
    <testcase time="0.01" classname="join_keys_extract" name="join_keys_i_ignores_duplicate_indexes_return_only_first_occurrence"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="join_keys_j_returns_the_same_as_join_keys_i_"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_j_returns_keys_for_given_pair"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_j_returns_keys_for_pair_given_by_numeric_indices"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_j_return_NULL_for_given_pair_when_no_such_key_and_no_common_parent"/>
    <testcase time="0.0110000000000001" classname="join_keys_extract" name="join_keys_i_j_doesn_t_infer_keys_between_children_if_they_don_t_have_common_key_to_parent"/>
    <testcase time="0.0179999999999998" classname="join_keys_extract" name="join_keys_i_j_doesn_t_infer_keys_between_grandchildren"/>
    <testcase time="0.0100000000000002" classname="join_keys_extract" name="join_keys_i_j_infer_keys_between_children_through_foreign_keys_to_parent._"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="join_keys_i_j_returns_NULL_for_inexisting_key_pair_can_t_even_infer_"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_j_throws_when_one_of_the_indices_is_longer_than_1"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_throws_when_assigning_anything"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_throws_when_no_index_specified"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="join_keys_i_j_can_set_new_value_for_existing_pair"/>
    <testcase time="0.00199999999999978" classname="join_keys_extract" name="join_keys_i_j_can_set_new_value_for_existing_pair"/>
    <testcase time="0.00500000000000034" classname="join_keys_extract" name="join_keys_i_j_sets_a_new_keys_for_inexisting_pair"/>
    <testcase time="0.00299999999999967" classname="join_keys_extract" name="join_keys_i_j_sets_a_new_keys_for_inexisting_pair"/>
    <testcase time="0.00900000000000034" classname="join_keys_extract" name="join_keys_i_j_throws_when_assigning_to_inspecific_index"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_j_throws_when_assigning_to_j_only"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="join_keys_i_j_throws_when_i_or_j_are_NULL"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="join_keys_i_j_throws_when_i_or_j_are_NULL"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_j_throws_when_i_or_j_are_longer_than_1"/>
    <testcase time="0.00999999999999979" classname="join_keys_extract" name="join_keys_i_j_throws_when_i_or_j_are_longer_than_1"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="join_keys_i_j_removes_keys_with_NULL"/>
    <testcase time="0.00300000000000011" classname="join_keys_extract" name="_.join_keys_accepts_named_list_where_each_containing_character"/>
    <testcase time="0.004" classname="join_keys_extract" name="_.join_keys_accepts_integerish_as_index"/>
    <testcase time="0.00300000000000011" classname="join_keys_extract" name="_.join_keys_accepts_unnamed_vector"/>
    <testcase time="0.0089999999999999" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00699999999999967" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.0110000000000001" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00699999999999967" classname="join_keys_extract" name="_.join_keys_doesn_t_accepts_other_list_than_named_containing_character"/>
    <testcase time="0.00500000000000034" classname="join_keys_extract" name="_.join_keys_adds_join_keys_specified_as_named_list_to_the_list_of_keys"/>
    <testcase time="0.00499999999999989" classname="join_keys_extract" name="_.join_keys_assigning_NULL_drops_a_key"/>
    <testcase time="0.004" classname="join_keys_extract" name="_.join_keys_adds_symmetrical_change_without_parents_to_the_foreign_dataset"/>
    <testcase time="0.00499999999999989" classname="join_keys_extract" name="_can_mutate_existing_keys"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="_mutating_non_existing_keys_adds_them"/>
    <testcase time="0.00599999999999978" classname="join_keys_extract" name="_setting_a_key_to_character_0_drops_the_key"/>
    <testcase time="0.00800000000000001" classname="join_keys_extract" name="_.join_keys_removes_keys_with_NULL"/>
    <testcase time="0.00700000000000012" classname="join_keys_extract" name="_.join_keys_removes_keys_with_NULL_and_applies_symmetrical_changes"/>
    <testcase time="0.00300000000000011" classname="join_keys_extract" name="_.join_keys_with_empty_name_is_changed_to_the_key_value"/>
    <testcase time="0.004" classname="join_keys_extract" name="_.join_keys_with_empty_value_is_set_to_its_name"/>
    <testcase time="0.004" classname="join_keys_extract" name="_.join_keys_passing_key_unnamed_empty_value_is_ignored"/>
    <testcase time="0.00099999999999989" classname="join_keys_extract" name="_.join_keys_passing_key_unnamed_empty_value_is_ignored"/>
    <testcase time="0.00999999999999979" classname="join_keys_extract" name="_.join_keys_fails_when_provided_foreign_key_pairs_for_same_datasets_but_different_keys"/>
    <testcase time="0.004" classname="join_keys_extract" name="_.join_keys_allows_when_provided_foreign_key_pairs_for_same_datasets_and_same_keys"/>
    <testcase time="0.00300000000000011" classname="join_keys_extract" name="_.join_keys_allows_when_provided_foreign_key_pairs_for_same_datasets_and_same_keys"/>
  </testsuite>
  <testsuite name="join_keys-names" timestamp="2024-10-16T17:11:59Z" hostname="e9d25d6f11aa" tests="2" skipped="0" failures="0" errors="0" time="0.024">
    <testcase time="0.012" classname="join_keys_names" name="names_.join_keys_will_replace_names_at_all_levels_of_the_join_keys_list"/>
    <testcase time="0.012" classname="join_keys_names" name="names_.join_keys_will_replace_names_at_all_levels_of_the_join_keys_list_when_parents_set"/>
  </testsuite>
  <testsuite name="join_keys-parents" timestamp="2024-10-16T17:11:59Z" hostname="e9d25d6f11aa" tests="17" skipped="0" failures="0" errors="0" time="0.122">
    <testcase time="0.00600000000000023" classname="join_keys_parents" name="parents_will_return_empty_list_when_empty_not_set"/>
    <testcase time="0.00299999999999967" classname="join_keys_parents" name="parents_will_return_empty_list_when_attribute_does_not_exist"/>
    <testcase time="0.004" classname="join_keys_parents" name="parents_returns_the_same_list_as_used_in_parents_"/>
    <testcase time="0.004" classname="join_keys_parents" name="parents_accepts_a_named_list_containing_non_empty_non_missing_character"/>
    <testcase time="0.00500000000000034" classname="join_keys_parents" name="parents_single_parent_can_be_changed_utilizing_list_functionality_with_"/>
    <testcase time="0.00999999999999979" classname="join_keys_parents" name="parents_dataset_can_t_be_own_parent"/>
    <testcase time="0.0100000000000002" classname="join_keys_parents" name="parents_setting_parent_child_relationship_fails_when_no_foreign_keys_between_datasets"/>
    <testcase time="0.0149999999999997" classname="join_keys_parents" name="parents_ensures_it_is_a_directed_acyclical_graph_DAG_"/>
    <testcase time="0.00600000000000023" classname="join_keys_parents" name="parents_single_parent_can_be_changed_utilizing_list_functionality_with_"/>
    <testcase time="0.00999999999999979" classname="join_keys_parents" name="parents_fails_when_value_isn_t_a_list_non_empty_non_missing_character"/>
    <testcase time="0.00700000000000012" classname="join_keys_parents" name="parents_fails_when_value_isn_t_a_list_non_empty_non_missing_character"/>
    <testcase time="0.00700000000000012" classname="join_keys_parents" name="parents_fails_when_value_isn_t_a_list_non_empty_non_missing_character"/>
    <testcase time="0.00699999999999967" classname="join_keys_parents" name="parents_fails_when_value_isn_t_a_list_non_empty_non_missing_character"/>
    <testcase time="0.00500000000000034" classname="join_keys_parents" name="parents_setting_parents_again_overwrites_previous_state"/>
    <testcase time="0.00499999999999989" classname="join_keys_parents" name="parents_sets_parent_datasets_to_join_keys_kept_in_teal_data"/>
    <testcase time="0.012" classname="join_keys_parents" name="parents_setting_parents_changes_join_keys_object"/>
    <testcase time="0.00599999999999978" classname="join_keys_parents" name="parents_setting_parents_changes_join_keys_object"/>
  </testsuite>
  <testsuite name="join_keys-print" timestamp="2024-10-16T17:12:00Z" hostname="e9d25d6f11aa" tests="5" skipped="0" failures="0" errors="0" time="0.037">
    <testcase time="0.00600000000000023" classname="join_keys_print" name="format.join_keys_for_empty_set"/>
    <testcase time="0.00700000000000012" classname="join_keys_print" name="format.join_keys_with_empty_parents"/>
    <testcase time="0.00699999999999967" classname="join_keys_print" name="format.join_keys_for_parents"/>
    <testcase time="0.00800000000000001" classname="join_keys_print" name="format.join_keys_print_inferred_keys_for_children_sharing_parent"/>
    <testcase time="0.00900000000000034" classname="join_keys_print" name="print.join_keys_produces_output_same_as_format"/>
  </testsuite>
  <testsuite name="join_keys" timestamp="2024-10-16T17:12:00Z" hostname="e9d25d6f11aa" tests="23" skipped="0" failures="0" errors="0" time="0.111">
    <testcase time="0.00599999999999978" classname="join_keys" name="join_keys_creates_empty_join_keys_object_by_default"/>
    <testcase time="0.00700000000000012" classname="join_keys" name="join_keys_only_accepts_teal_data_and_join_key_arguments"/>
    <testcase time="0.00199999999999978" classname="join_keys" name="join_keys_only_accepts_teal_data_and_join_key_arguments"/>
    <testcase time="0.00500000000000034" classname="join_keys" name="join_keys_only_accepts_teal_data_and_join_key_arguments"/>
    <testcase time="0.00699999999999967" classname="join_keys" name="join_keys_doesn_t_accept_a_list_which_is_identical_to_output_of_join_key_function"/>
    <testcase time="0.00500000000000034" classname="join_keys" name="join_keys.join_key_creates_join_keys"/>
    <testcase time="0.00499999999999989" classname="join_keys" name="join_keys_accepts_duplicated_join_key"/>
    <testcase time="0.00499999999999989" classname="join_keys" name="join_keys_accepts_duplicated_join_key_undirected_"/>
    <testcase time="0.00499999999999989" classname="join_keys" name="join_keys_is_a_collection_of_join_key_ie_named_list_with_named_list_with_named_char_vector"/>
    <testcase time="0.00100000000000033" classname="join_keys" name="join_keys_is_a_collection_of_join_key_ie_named_list_with_named_list_with_named_char_vector"/>
    <testcase time="0.00099999999999989" classname="join_keys" name="join_keys_is_a_collection_of_join_key_ie_named_list_with_named_list_with_named_char_vector"/>
    <testcase time="0.0089999999999999" classname="join_keys" name="join_keys_cannot_create_acyclical_graph"/>
    <testcase time="0.00499999999999989" classname="join_keys" name="join_keys.teal_data_returns_join_keys_object_from_teal_data"/>
    <testcase time="0.004" classname="join_keys" name="join_keys.join_keys_returns_itself"/>
    <testcase time="0.00800000000000001" classname="join_keys" name="join_keys_constructor_adds_symmetric_keys_on_given_unnamed_foreign_key"/>
    <testcase time="0.00600000000000023" classname="join_keys" name="join_keys_constructor_adds_symmetric_keys_on_given_named_foreign_key"/>
    <testcase time="0.00599999999999978" classname="join_keys" name="join_keys_.join_keys_overwrites_existing_join_keys"/>
    <testcase time="0.00600000000000023" classname="join_keys" name="join_keys_.teal_data_overwrites_existing_join_keys"/>
    <testcase time="0.00599999999999978" classname="join_keys" name="join_keys_.teal_data_overwrites_existing_join_keys"/>
    <testcase time="0.004" classname="join_keys" name="join_keys_.join_keys_with_empty_name_is_changed_to_the_key_value"/>
    <testcase time="0.00300000000000011" classname="join_keys" name="join_keys_.join_keys_with_named_empty_valued_is_changed_to_its_name"/>
    <testcase time="0.004" classname="join_keys" name="join_keys_.join_keys_with_empty_value_in_a_named_vector_are_ignored_"/>
    <testcase time="0.00099999999999989" classname="join_keys" name="join_keys_.join_keys_with_empty_value_in_a_named_vector_are_ignored_"/>
  </testsuite>
  <testsuite name="teal_data" timestamp="2024-10-16T17:12:00Z" hostname="e9d25d6f11aa" tests="20" skipped="0" failures="0" errors="0" time="0.083">
    <testcase time="0.00700000000000012" classname="teal_data" name="teal_data_allows_to_initialize_empty_teal_data_object"/>
    <testcase time="0.00300000000000011" classname="teal_data" name="empty_teal_data_returns_empty_code_id_wartnings_and_messages_and_verified_TRUE"/>
    <testcase time="0.00199999999999978" classname="teal_data" name="empty_teal_data_returns_empty_code_id_wartnings_and_messages_and_verified_TRUE"/>
    <testcase time="0.00099999999999989" classname="teal_data" name="empty_teal_data_returns_empty_code_id_wartnings_and_messages_and_verified_TRUE"/>
    <testcase time="0.00500000000000034" classname="teal_data" name="empty_teal_data_returns_empty_code_id_wartnings_and_messages_and_verified_TRUE"/>
    <testcase time="0.00199999999999978" classname="teal_data" name="empty_teal_data_returns_empty_code_id_wartnings_and_messages_and_verified_TRUE"/>
    <testcase time="0.00300000000000011" classname="teal_data" name="non_empty_data_in_teal_data_returns_verified_FALSE"/>
    <testcase time="0.00599999999999978" classname="teal_data" name="teal_data_allows_to_initialize_empty_teal_data_with_join_keys"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_initializes_teal_data_object_with_datanames_taken_from_passed_objects"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_initializes_teal_data_object_without_datanames_taken_from_join_keys_if_objects_did_not_exist_in_env"/>
    <testcase time="0.00500000000000034" classname="teal_data" name="teal_data_initializes_teal_data_object_with_datanames_taken_only_from_passed_objects_and_not_join_keys"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_returns_teal_data_when_data_passed_as_named_list"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_accepts_any_data_provided_as_named_list"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_accepts_code_as_character"/>
    <testcase time="0.00299999999999967" classname="teal_data" name="teal_data_accepts_code_as_language"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_code_unfolds_code_block_wrapped_in_"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_code_is_concatenated_into_single_string"/>
    <testcase time="0.00700000000000012" classname="teal_data" name="teal_data_env_is_locked._Not_able_to_modify_add_or_remove_bindings"/>
    <testcase time="0.00700000000000012" classname="teal_data" name="teal_data_env_is_locked._Not_able_to_modify_add_or_remove_bindings"/>
    <testcase time="0.004" classname="teal_data" name="teal_data_env_is_locked._Not_able_to_modify_add_or_remove_bindings"/>
  </testsuite>
  <testsuite name="verify" timestamp="2024-10-16T17:12:00Z" hostname="e9d25d6f11aa" tests="8" skipped="0" failures="0" errors="0" time="0.032">
    <testcase time="0.00599999999999978" classname="verify" name="verify_returns_the_same_object_for_verified_TRUE"/>
    <testcase time="0.00200000000000022" classname="verify" name="verify_returns_the_same_object_for_verified_TRUE"/>
    <testcase time="0.00499999999999989" classname="verify" name="verify_returns_the_same_object_with_changed_verified_field_for_properly_executed_code"/>
    <testcase time="0.00099999999999989" classname="verify" name="verify_returns_the_same_object_with_changed_verified_field_for_properly_executed_code"/>
    <testcase time="0.00099999999999989" classname="verify" name="verify_returns_the_same_object_with_changed_verified_field_for_properly_executed_code"/>
    <testcase time="0.00100000000000033" classname="verify" name="verify_returns_the_same_object_with_changed_verified_field_for_properly_executed_code"/>
    <testcase time="0.0089999999999999" classname="verify" name="verify_raises_error_if_code_does_not_restore_objects_in_env"/>
    <testcase time="0.00700000000000012" classname="verify" name="verify_returns_error_for_qenv.error_input"/>
  </testsuite>
</testsuites>
